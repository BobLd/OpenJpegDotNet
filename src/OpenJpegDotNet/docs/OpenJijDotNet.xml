<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpenJpegDotNet</name>
    </assembly>
    <members>
        <member name="T:OpenJpegDotNet.OpenJpeg">
            <summary>
            Provides the methods of OpenJpeg.
            </summary>
        </member>
        <member name="T:OpenJpegDotNet.OpenJpegObject">
            <summary>
            A class which has a pointer of native structure.
            </summary>
        </member>
        <member name="M:OpenJpegDotNet.OpenJpegObject.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenJpegDotNet.OpenJpegObject"/> class with the specified value indicating whether this instance is disposable.
            </summary>
            <param name="isEnabledDispose">true if this instance is disposable; otherwise, false.</param>
        </member>
        <member name="P:OpenJpegDotNet.OpenJpegObject.IsDisposed">
            <summary>
            Gets a value indicating whether this instance has been disposed.
            </summary>
            <returns>true if this instance has been disposed; otherwise, false.</returns>
        </member>
        <member name="P:OpenJpegDotNet.OpenJpegObject.IsEnableDispose">
            <summary>
            Gets a value indicating whether this instance is disposable.
            </summary>
            <returns>true if this instance is disposable; otherwise, false.</returns>
        </member>
        <member name="P:OpenJpegDotNet.OpenJpegObject.NativePtr">
            <summary>
            Gets a pointer of native structure.
            </summary>>
        </member>
        <member name="M:OpenJpegDotNet.OpenJpegObject.ThrowIfDisposed">
            <summary>
            If this object is disposed, then <see cref="T:System.ObjectDisposedException"/> is thrown.
            </summary>
        </member>
        <member name="M:OpenJpegDotNet.OpenJpegObject.DisposeManaged">
            <summary>
            Releases all managed resources.
            </summary>
        </member>
        <member name="M:OpenJpegDotNet.OpenJpegObject.DisposeUnmanaged">
            <summary>
            Releases all unmanaged resources.
            </summary>
        </member>
        <member name="M:OpenJpegDotNet.OpenJpegObject.Dispose">
            <summary>
            Releases all resources used by this <see cref="T:OpenJpegDotNet.OpenJpegObject"/>.
            </summary>
        </member>
        <member name="M:OpenJpegDotNet.OpenJpegObject.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by this <see cref="T:OpenJpegDotNet.OpenJpegObject"/>.
            </summary>
            <param name="disposing">Indicate value whether <see cref="M:System.IDisposable.Dispose"/> method was called.</param>
        </member>
        <member name="F:OpenJpegDotNet.NativeMethods.NativeLibrary">
            <summary>
            Native library file name.
            If Linux, it will be converted to  libOpenJpegDotNetNative.so
            If MacOSX, it will be converted to  libOpenJpegDotNetNative.dylib
            If Windows, it will be available after call LoadLibrary.
            And this file name must not contain period. If it does,
            CLR does not add extension (.dll) and CLR fails to load library
            </summary>
        </member>
        <member name="M:OpenJpegDotNet.StdString.DisposeUnmanaged">
            <summary>
            Releases all unmanaged resources.
            </summary>
        </member>
        <member name="M:OpenJpegDotNet.StdVector`1.DisposeUnmanaged">
            <summary>
            Releases all unmanaged resources.
            </summary>
        </member>
    </members>
</doc>
